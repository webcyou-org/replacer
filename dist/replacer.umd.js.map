{"version":3,"file":"replacer.umd.js","sources":["../src/utils/const.ts","../src/utils/function.ts","../src/models/state.ts","../src/models/ReplaceTarget.ts","../src/models/Replacer.ts","../src/core/createReplacerList.ts","../src/core/mediaQueryChangeEvent.ts","../src/api/addEvent.ts","../src/api/init.ts","../src/api/getType.ts","../src/api/getState.ts","../src/api/resetEvent.ts","../src/api/is.ts"],"sourcesContent":["import { Breakpoint } from '../types/index'\n\nexport const BREAKPOINT_LIST: Breakpoint[] = [\n    {\n        type: 'large',\n        deviceType: 'pc',\n        query: '(min-width: 1201px)'\n    },\n    {\n        type: 'middle',\n        deviceType: 'tab',\n        query: '(max-width: 1200px) and (min-width: 769px)'\n    },\n    {\n        type: 'small',\n        deviceType: 'sp',\n        query: '(max-width: 768px)'\n    }\n]\n","export function replaceImagePath(src: string, suffix: string): string {\n    const filename = src.match('.+/(.+?).[a-z]+([?#;].*)?$')[1]\n    const extend = src.match(/[^.]+$/)\n\n    return src.replace(filename + '.' + extend, filename + suffix + '.' + extend)\n}\n","import { BREAKPOINT_LIST } from '../utils/const'\nimport { Breakpoint } from '../types/breakpoint'\nimport { Replacer } from '../models'\n\nexport interface State extends Breakpoint {\n    breakpointList: Breakpoint[];\n    replacerList: Replacer[];\n    init: Function;\n    check: Function;\n    setReplacerList: Function;\n    setBreakpointList: Function;\n    replaceCheck: Function;\n    isMatch: Function;\n    isType: Function;\n    isDeviceType: Function;\n    isQuery: Function;\n}\n\nexport let state: State = {\n    type: 'large',\n    deviceType: 'pc',\n    query: '(min-width: 1201px)',\n    breakpointList: BREAKPOINT_LIST,\n    init: function(): void {\n        this.check();\n        this.replaceCheck();\n    },\n    check: function(): void {\n        this.breakpointList.forEach(breakpoint => {\n            if (window.matchMedia(breakpoint.query).matches) {\n                this.type = breakpoint.type\n                this.deviceType = breakpoint.deviceType\n                this.query = breakpoint.query\n            }\n        })\n    },\n    replacerList: [],\n    setReplacerList: function(replacerList: Replacer[]): void {\n        this.replacerList = replacerList;\n    },\n    setBreakpointList: function(breakpointList: Breakpoint[]) {\n        this.breakpointList = breakpointList;\n        this.type = breakpointList[0].type;\n        this.deviceType = breakpointList[0].deviceType;\n        this.query = breakpointList[0].query;\n    },\n    replaceCheck: function(): void {\n        this.replacerList.forEach(replacer => {\n            replacer.replaceCheck();\n        })\n    },\n    isMatch: function(context: string): boolean {\n        return this.type === context || this.deviceType === context || this.query === context;\n    },\n    isType: function(type: string): boolean {\n        return this.type === type;\n    },\n    isDeviceType: function(deviceType: string): boolean {\n        return this.deviceType === deviceType;\n    },\n    isQuery: function(query: string): boolean {\n        return this.query === query;\n    }\n}\n","import { state } from './state'\n\nexport class ReplaceTarget {\n    type?: string\n    deviceType?: string\n    query?: string\n    changeSrc: string\n\n    constructor(data: any) {\n        this.type = data.type ? data.type : ''\n        this.deviceType = data.deviceType ? data.deviceType : ''\n        this.query = data.query ? data.query : ''\n        this.changeSrc = data.changeSrc\n    }\n\n    get isMatch(): boolean {\n        return this.type === state.type || this.deviceType === state.deviceType || this.query === state.query\n    }\n}\n","import { replaceImagePath } from '../utils'\nimport { state } from './state'\nimport { ReplaceTarget } from './ReplaceTarget'\n\nexport class Replacer {\n    protected readonly originSrc: string\n    node: any\n    replaceTargetList: ReplaceTarget[]\n\n    constructor(data: any) {\n        this.originSrc = data.originSrc\n        this.node = data.node\n        this.replaceTargetList = data.replaceTargetList.map((replaceTarget: any) => {\n            return new ReplaceTarget({\n                type: replaceTarget.type,\n                deviceType: replaceTarget.dtype,\n                query: replaceTarget.query,\n                changeSrc: replaceImagePath(data.originSrc, replaceTarget.suffix),\n            })\n        });\n    }\n\n    matchMediaCallback(): void {\n        let isChange: boolean = false;\n        state.check();\n\n        this.replaceTargetList.forEach((replaceTarget: ReplaceTarget) => {\n            if (replaceTarget.isMatch && !isChange) {\n                this.node.setAttribute('src', replaceTarget.changeSrc)\n                isChange = true\n            }\n        })\n\n        if (!isChange) {\n            this.node.setAttribute('src', this.originSrc)\n        }\n    }\n\n    replaceCheck(): void {\n        this.replaceTargetList.forEach((replaceTarget: ReplaceTarget) => {\n            if (replaceTarget.isMatch) {\n                this.node.setAttribute('src', replaceTarget.changeSrc)\n            }\n        })\n    }\n}\n","import { Replacer } from '../models'\n\nexport function createReplacerList(images: NodeListOf<HTMLImageElement>): Replacer[] {\n    let replacerList: Replacer[] = []\n\n    images.forEach((element: HTMLImageElement) => {\n        let replaceDataList = JSON.parse(element.dataset['replace'] as string)\n        replaceDataList = Array.isArray(replaceDataList) ? replaceDataList : [replaceDataList]\n\n        replacerList.push(\n            new Replacer({\n                originSrc: element.src,\n                node: element,\n                replaceTargetList: replaceDataList\n            })\n        )\n    })\n    return replacerList\n}\n","import { state } from '../models'\n\nexport function mediaQueryChangeEvent(event: any): void {\n    if (event.matches) {\n        state.replacerList.forEach(replacer => {\n            replacer.matchMediaCallback()\n        })\n    }\n}\n","import { state } from '../models'\nimport { mediaQueryChangeEvent } from '../core'\n\nexport function addEvent(): void {\n    state.breakpointList.forEach(breakpoint => {\n        window.matchMedia(breakpoint.query).addEventListener('change', mediaQueryChangeEvent)\n    })\n}\n","import { state } from '../models'\nimport { createReplacerList } from '../core'\nimport { addEvent } from './addEvent'\n\nexport function init(option?: any): void {\n    if (option) {\n        state.setBreakpointList(Array.isArray(option) ? option : [option]);\n    }\n\n    const images: NodeListOf<HTMLImageElement> = document.querySelectorAll('[data-replace]')\n    state.setReplacerList(createReplacerList(images));\n\n    addEvent();\n    state.init();\n}\n","import { state } from '../models'\n\nexport function getType(): string {\n    return state.type\n}\n","import { state, State } from '../models'\n\nexport function getState(): State {\n    return state\n}\n","import { state } from '../models'\nimport { mediaQueryChangeEvent } from '../core'\n\nexport function resetEvent(): void {\n    state.breakpointList.forEach(breakpoint => {\n        window.matchMedia(breakpoint.query).removeEventListener('change', mediaQueryChangeEvent);\n    })\n}\n","import { state } from '../models'\n\nexport function isMatch(context: string): boolean {\n    return state.isMatch(context);\n}\n\nexport function isType(type: string): boolean {\n    return state.isType(type);\n}\n\nexport function isDeviceType(deviceType: string): boolean {\n    return state.isDeviceType(deviceType);\n}\n\nexport function isQuery(query: string): boolean {\n    return state.isQuery(query);\n}\n"],"names":[],"mappings":";;;;;;IAEO,MAAM,eAAe,GAAiB;QACzC;YACI,IAAI,EAAE,OAAO;YACb,UAAU,EAAE,IAAI;YAChB,KAAK,EAAE,qBAAqB;SAC/B;QACD;YACI,IAAI,EAAE,QAAQ;YACd,UAAU,EAAE,KAAK;YACjB,KAAK,EAAE,4CAA4C;SACtD;QACD;YACI,IAAI,EAAE,OAAO;YACb,UAAU,EAAE,IAAI;YAChB,KAAK,EAAE,oBAAoB;SAC9B;KACJ;;aClBe,gBAAgB,CAAC,GAAW,EAAE,MAAc;QACxD,MAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC,CAAA;QAC3D,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;QAElC,OAAO,GAAG,CAAC,OAAO,CAAC,QAAQ,GAAG,GAAG,GAAG,MAAM,EAAE,QAAQ,GAAG,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC,CAAA;IACjF;;ICaO,IAAI,KAAK,GAAU;QACtB,IAAI,EAAE,OAAO;QACb,UAAU,EAAE,IAAI;QAChB,KAAK,EAAE,qBAAqB;QAC5B,cAAc,EAAE,eAAe;QAC/B,IAAI,EAAE;YACF,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;QACD,KAAK,EAAE;YACH,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU;gBAClC,IAAI,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE;oBAC7C,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAA;oBAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAA;oBACvC,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAA;iBAChC;aACJ,CAAC,CAAA;SACL;QACD,YAAY,EAAE,EAAE;QAChB,eAAe,EAAE,UAAS,YAAwB;YAC9C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;SACpC;QACD,iBAAiB,EAAE,UAAS,cAA4B;YACpD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACnC,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;YAC/C,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;SACxC;QACD,YAAY,EAAE;YACV,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ;gBAC9B,QAAQ,CAAC,YAAY,EAAE,CAAC;aAC3B,CAAC,CAAA;SACL;QACD,OAAO,EAAE,UAAS,OAAe;YAC7B,OAAO,IAAI,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,UAAU,KAAK,OAAO,IAAI,IAAI,CAAC,KAAK,KAAK,OAAO,CAAC;SACzF;QACD,MAAM,EAAE,UAAS,IAAY;YACzB,OAAO,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC;SAC7B;QACD,YAAY,EAAE,UAAS,UAAkB;YACrC,OAAO,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC;SACzC;QACD,OAAO,EAAE,UAAS,KAAa;YAC3B,OAAO,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC;SAC/B;KACJ;;UC7DY,aAAa;QACtB,IAAI,CAAS;QACb,UAAU,CAAS;QACnB,KAAK,CAAS;QACd,SAAS,CAAQ;QAEjB,YAAY,IAAS;YACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,CAAA;YACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,EAAE,CAAA;YACxD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAA;YACzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;SAClC;QAED,IAAI,OAAO;YACP,OAAO,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAA;SACxG;;;UCbQ,QAAQ;QACE,SAAS,CAAQ;QACpC,IAAI,CAAK;QACT,iBAAiB,CAAiB;QAElC,YAAY,IAAS;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;YAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;YACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,aAAkB;gBACnE,OAAO,IAAI,aAAa,CAAC;oBACrB,IAAI,EAAE,aAAa,CAAC,IAAI;oBACxB,UAAU,EAAE,aAAa,CAAC,KAAK;oBAC/B,KAAK,EAAE,aAAa,CAAC,KAAK;oBAC1B,SAAS,EAAE,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,aAAa,CAAC,MAAM,CAAC;iBACpE,CAAC,CAAA;aACL,CAAC,CAAC;SACN;QAED,kBAAkB;YACd,IAAI,QAAQ,GAAY,KAAK,CAAC;YAC9B,KAAK,CAAC,KAAK,EAAE,CAAC;YAEd,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,aAA4B;gBACxD,IAAI,aAAa,CAAC,OAAO,IAAI,CAAC,QAAQ,EAAE;oBACpC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,CAAA;oBACtD,QAAQ,GAAG,IAAI,CAAA;iBAClB;aACJ,CAAC,CAAA;YAEF,IAAI,CAAC,QAAQ,EAAE;gBACX,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAA;aAChD;SACJ;QAED,YAAY;YACR,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,aAA4B;gBACxD,IAAI,aAAa,CAAC,OAAO,EAAE;oBACvB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,CAAA;iBACzD;aACJ,CAAC,CAAA;SACL;;;aC1CW,kBAAkB,CAAC,MAAoC;QACnE,IAAI,YAAY,GAAe,EAAE,CAAA;QAEjC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAyB;YACrC,IAAI,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAW,CAAC,CAAA;YACtE,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,eAAe,GAAG,CAAC,eAAe,CAAC,CAAA;YAEtF,YAAY,CAAC,IAAI,CACb,IAAI,QAAQ,CAAC;gBACT,SAAS,EAAE,OAAO,CAAC,GAAG;gBACtB,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,eAAe;aACrC,CAAC,CACL,CAAA;SACJ,CAAC,CAAA;QACF,OAAO,YAAY,CAAA;IACvB;;aChBgB,qBAAqB,CAAC,KAAU;QAC5C,IAAI,KAAK,CAAC,OAAO,EAAE;YACf,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ;gBAC/B,QAAQ,CAAC,kBAAkB,EAAE,CAAA;aAChC,CAAC,CAAA;SACL;IACL;;aCLgB,QAAQ;QACpB,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU;YACnC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,QAAQ,EAAE,qBAAqB,CAAC,CAAA;SACxF,CAAC,CAAA;IACN;;aCHgB,IAAI,CAAC,MAAY;QAC7B,IAAI,MAAM,EAAE;YACR,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;SACtE;QAED,MAAM,MAAM,GAAiC,QAAQ,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAA;QACxF,KAAK,CAAC,eAAe,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;QAElD,QAAQ,EAAE,CAAC;QACX,KAAK,CAAC,IAAI,EAAE,CAAC;IACjB;;aCZgB,OAAO;QACnB,OAAO,KAAK,CAAC,IAAI,CAAA;IACrB;;aCFgB,QAAQ;QACpB,OAAO,KAAK,CAAA;IAChB;;aCDgB,UAAU;QACtB,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU;YACnC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,mBAAmB,CAAC,QAAQ,EAAE,qBAAqB,CAAC,CAAC;SAC5F,CAAC,CAAA;IACN;;aCLgB,OAAO,CAAC,OAAe;QACnC,OAAO,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;aAEe,MAAM,CAAC,IAAY;QAC/B,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;aAEe,YAAY,CAAC,UAAkB;QAC3C,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;aAEe,OAAO,CAAC,KAAa;QACjC,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAChC;;;;;;;;;;;;;;;;;;"}