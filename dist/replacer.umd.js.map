{"version":3,"file":"replacer.umd.js","sources":["../src/utils/const.ts","../src/utils/function.ts","../src/models/state.ts","../src/models/ReplaceTarget.ts","../src/models/Replacer.ts","../src/core/createReplacerList.ts","../src/api/bind.ts","../src/api/init.ts"],"sourcesContent":["export const BREAKPOINT_LIST = [\n    {\n        type: 'large',\n        deviceType: 'pc',\n        query: '(min-width: 1201px)'\n    },\n    {\n        type: 'middle',\n        deviceType: 'tab',\n        query: '(max-width: 1200px) and (min-width: 769px)'\n    },\n    {\n        type: 'small',\n        deviceType: 'sp',\n        query: '(max-width: 768px)'\n    }\n]\n","export function replaceImagePath(src: any, suffix: string): string {\n    const filename = src.match('.+/(.+?).[a-z]+([?#;].*)?$')[1]\n    const extend = src.match(/[^.]+$/)\n\n    return src.replace(filename + '.' + extend, filename + suffix + '.' + extend)\n}\n","import { BREAKPOINT_LIST } from '../utils/const'\n\nexport let state = {\n    type: 'large',\n    deviceType: 'pc',\n    query: '(min-width: 1201px)',\n    breakpointList: BREAKPOINT_LIST,\n    check: function() {\n        this.breakpointList.forEach(breakpoint => {\n            if (window.matchMedia(breakpoint.query).matches) {\n                this.type = breakpoint.type\n                this.deviceType = breakpoint.deviceType\n                this.query = breakpoint.query\n            }\n        })\n    }\n}\n","import { state } from './state'\n\nexport class ReplaceTarget {\n    type?: string\n    deviceType?: string\n    query?: string\n    changeSrc: string\n\n    constructor(data: any) {\n        this.type = data.type ? data.type : ''\n        this.deviceType = data.deviceType ? data.deviceType : ''\n        this.query = data.query ? data.query : ''\n        this.changeSrc = data.changeSrc\n    }\n\n    get isMatch(): boolean {\n        return this.type === state.type || this.deviceType === state.deviceType || this.query === state.query\n    }\n}\n","import { replaceImagePath } from '../utils'\nimport { state } from './state'\nimport { ReplaceTarget } from './ReplaceTarget'\n\nexport class Replacer {\n    originSrc: string\n    node: any\n    replaceTargetList: ReplaceTarget[]\n\n    constructor(data: any) {\n        this.originSrc = data.originSrc\n        this.node = data.node\n        this.replaceTargetList = data.replaceTargetList.map((replaceTarget: any) => {\n            return new ReplaceTarget({\n                type: replaceTarget.type,\n                deviceType: replaceTarget.dtype,\n                query: replaceTarget.query,\n                changeSrc: replaceImagePath(data.originSrc, replaceTarget.suffix),\n            })\n        });\n    }\n\n    matchMediaCallback(): void {\n        let isChange: boolean = false;\n        state.check();\n\n        this.replaceTargetList.forEach((replaceTarget: ReplaceTarget) => {\n            if (replaceTarget.isMatch && !isChange) {\n                this.node.setAttribute('src', replaceTarget.changeSrc)\n                isChange = true\n            }\n        })\n\n        if (!isChange) {\n            this.node.src = this.originSrc\n        }\n    }\n\n    replaceCheck(): void {\n        this.replaceTargetList.forEach((replaceTarget: ReplaceTarget) => {\n            if (replaceTarget.isMatch) {\n                this.node.setAttribute('src', replaceTarget.changeSrc)\n            }\n        })\n    }\n}\n","import { Replacer } from '../models'\n\nexport function createReplacerList(images: NodeListOf<HTMLImageElement>): Replacer[] {\n    let replacerList: Replacer[] = []\n\n    images.forEach((element: HTMLImageElement) => {\n        let replaceDataList = JSON.parse(element.dataset['replace'] as string)\n        replaceDataList = Array.isArray(replaceDataList) ? replaceDataList : [replaceDataList]\n\n        replacerList.push(\n            new Replacer({\n                originSrc: element.src,\n                node: element,\n                replaceTargetList: replaceDataList\n            })\n        )\n    })\n    return replacerList\n}\n","import { Replacer, state } from '../models'\n\n// eventReset\n\n// bind\nexport function bind(replacerList: Replacer[]): void {\n    state.breakpointList.forEach(breakpoint => {\n        window.matchMedia(breakpoint.query).addEventListener('change', event => {\n            if (event.matches) {\n                replacerList.forEach(replacer => {\n                    replacer.matchMediaCallback()\n                })\n            }\n        })\n    })\n    // init\n    state.check();\n}\n","import { Replacer } from '../models'\nimport { createReplacerList } from '../core'\nimport { bind } from './bind'\n\nexport function init() {\n    const images: NodeListOf<HTMLImageElement> = document.querySelectorAll('[data-replace]')\n    let replacerList: Replacer[] = createReplacerList(images)\n\n    bind(replacerList)\n    replacerList.forEach(replacer => {\n        replacer.replaceCheck()\n    })\n}\n"],"names":[],"mappings":";;;;;;IAAO,MAAM,eAAe,GAAG;QAC3B;YACI,IAAI,EAAE,OAAO;YACb,UAAU,EAAE,IAAI;YAChB,KAAK,EAAE,qBAAqB;SAC/B;QACD;YACI,IAAI,EAAE,QAAQ;YACd,UAAU,EAAE,KAAK;YACjB,KAAK,EAAE,4CAA4C;SACtD;QACD;YACI,IAAI,EAAE,OAAO;YACb,UAAU,EAAE,IAAI;YAChB,KAAK,EAAE,oBAAoB;SAC9B;KACJ;;aChBe,gBAAgB,CAAC,GAAQ,EAAE,MAAc;QACrD,MAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC,CAAA;QAC3D,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;QAElC,OAAO,GAAG,CAAC,OAAO,CAAC,QAAQ,GAAG,GAAG,GAAG,MAAM,EAAE,QAAQ,GAAG,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC,CAAA;IACjF;;ICHO,IAAI,KAAK,GAAG;QACf,IAAI,EAAE,OAAO;QACb,UAAU,EAAE,IAAI;QAChB,KAAK,EAAE,qBAAqB;QAC5B,cAAc,EAAE,eAAe;QAC/B,KAAK,EAAE;YACH,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU;gBAClC,IAAI,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE;oBAC7C,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAA;oBAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAA;oBACvC,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAA;iBAChC;aACJ,CAAC,CAAA;SACL;KACJ;;UCdY,aAAa;QACtB,IAAI,CAAS;QACb,UAAU,CAAS;QACnB,KAAK,CAAS;QACd,SAAS,CAAQ;QAEjB,YAAY,IAAS;YACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,CAAA;YACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,EAAE,CAAA;YACxD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAA;YACzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;SAClC;QAED,IAAI,OAAO;YACP,OAAO,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAA;SACxG;;;UCbQ,QAAQ;QACjB,SAAS,CAAQ;QACjB,IAAI,CAAK;QACT,iBAAiB,CAAiB;QAElC,YAAY,IAAS;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;YAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;YACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,aAAkB;gBACnE,OAAO,IAAI,aAAa,CAAC;oBACrB,IAAI,EAAE,aAAa,CAAC,IAAI;oBACxB,UAAU,EAAE,aAAa,CAAC,KAAK;oBAC/B,KAAK,EAAE,aAAa,CAAC,KAAK;oBAC1B,SAAS,EAAE,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,aAAa,CAAC,MAAM,CAAC;iBACpE,CAAC,CAAA;aACL,CAAC,CAAC;SACN;QAED,kBAAkB;YACd,IAAI,QAAQ,GAAY,KAAK,CAAC;YAC9B,KAAK,CAAC,KAAK,EAAE,CAAC;YAEd,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,aAA4B;gBACxD,IAAI,aAAa,CAAC,OAAO,IAAI,CAAC,QAAQ,EAAE;oBACpC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,CAAA;oBACtD,QAAQ,GAAG,IAAI,CAAA;iBAClB;aACJ,CAAC,CAAA;YAEF,IAAI,CAAC,QAAQ,EAAE;gBACX,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAA;aACjC;SACJ;QAED,YAAY;YACR,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,aAA4B;gBACxD,IAAI,aAAa,CAAC,OAAO,EAAE;oBACvB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,CAAA;iBACzD;aACJ,CAAC,CAAA;SACL;;;aC1CW,kBAAkB,CAAC,MAAoC;QACnE,IAAI,YAAY,GAAe,EAAE,CAAA;QAEjC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAyB;YACrC,IAAI,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAW,CAAC,CAAA;YACtE,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,eAAe,GAAG,CAAC,eAAe,CAAC,CAAA;YAEtF,YAAY,CAAC,IAAI,CACb,IAAI,QAAQ,CAAC;gBACT,SAAS,EAAE,OAAO,CAAC,GAAG;gBACtB,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,eAAe;aACrC,CAAC,CACL,CAAA;SACJ,CAAC,CAAA;QACF,OAAO,YAAY,CAAA;IACvB;;IChBA;IAEA;aACgB,IAAI,CAAC,YAAwB;QACzC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU;YACnC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,QAAQ,EAAE,KAAK;gBAChE,IAAI,KAAK,CAAC,OAAO,EAAE;oBACf,YAAY,CAAC,OAAO,CAAC,QAAQ;wBACzB,QAAQ,CAAC,kBAAkB,EAAE,CAAA;qBAChC,CAAC,CAAA;iBACL;aACJ,CAAC,CAAA;SACL,CAAC,CAAA;;QAEF,KAAK,CAAC,KAAK,EAAE,CAAC;IAClB;;aCbgB,IAAI;QAChB,MAAM,MAAM,GAAiC,QAAQ,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAA;QACxF,IAAI,YAAY,GAAe,kBAAkB,CAAC,MAAM,CAAC,CAAA;QAEzD,IAAI,CAAC,YAAY,CAAC,CAAA;QAClB,YAAY,CAAC,OAAO,CAAC,QAAQ;YACzB,QAAQ,CAAC,YAAY,EAAE,CAAA;SAC1B,CAAC,CAAA;IACN;;;;;;;;;;;"}