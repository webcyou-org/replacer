{"version":3,"file":"replacer.es.js","sources":["../src/utils/const.ts","../src/utils/function.ts","../src/models/state.ts","../src/models/ReplaceTarget.ts","../src/models/Replacer.ts","../src/core/createReplacerList.ts","../src/api/bind.ts","../src/api/init.ts"],"sourcesContent":["export const BREAKPOINT_LIST = [\n    {\n        type: 'large',\n        deviceType: 'pc',\n        query: '(min-width: 1201px)'\n    },\n    {\n        type: 'middle',\n        deviceType: 'tab',\n        query: '(max-width: 1200px) and (min-width: 769px)'\n    },\n    {\n        type: 'small',\n        deviceType: 'sp',\n        query: '(max-width: 768px)'\n    }\n]\n","export function replaceImagePath(src: any, suffix: string): string {\n    const filename = src.match('.+/(.+?).[a-z]+([?#;].*)?$')[1]\n    const extend = src.match(/[^.]+$/)\n\n    return src.replace(filename + '.' + extend, filename + suffix + '.' + extend)\n}\n","import { BREAKPOINT_LIST } from '../utils/const'\n\nexport let state = {\n    type: 'large',\n    deviceType: 'pc',\n    query: '(min-width: 1201px)',\n    breakpointList: BREAKPOINT_LIST,\n    check: function() {\n        this.breakpointList.forEach(breakpoint => {\n            if (window.matchMedia(breakpoint.query).matches) {\n                this.type = breakpoint.type\n                this.deviceType = breakpoint.deviceType\n                this.query = breakpoint.query\n            }\n        })\n    }\n}\n","import { state } from './state'\n\nexport class ReplaceTarget {\n    type?: string\n    deviceType?: string\n    query?: string\n    changeSrc: string\n\n    constructor(data: any) {\n        this.type = data.type ? data.type : ''\n        this.deviceType = data.type ? data.type : ''\n        this.query = data.query ? data.query : ''\n        this.changeSrc = data.changeSrc\n    }\n\n    get isMatch(): boolean {\n        return this.type === state.type || this.deviceType === state.deviceType || this.query === state.query\n    }\n}\n","import { replaceImagePath } from '../utils'\nimport { state } from './state'\nimport { ReplaceTarget } from './ReplaceTarget'\n\nexport class Replacer {\n    originSrc: string\n    node: any\n    replaceTargetList: ReplaceTarget[]\n\n    constructor(data: any) {\n        this.originSrc = data.originSrc\n        this.node = data.node\n        this.replaceTargetList = data.replaceTargetList.map((replaceTarget: any) => {\n            return new ReplaceTarget({\n                type: replaceTarget.type,\n                query: replaceTarget.query,\n                changeSrc: replaceImagePath(data.originSrc, replaceTarget.suffix),\n            })\n        });\n    }\n\n    matchMediaCallback(): void {\n        let isChange: boolean = false;\n        state.check();\n\n        this.replaceTargetList.forEach((replaceTarget: ReplaceTarget) => {\n            if (replaceTarget.isMatch && !isChange) {\n                this.node.setAttribute('src', replaceTarget.changeSrc)\n                isChange = true\n            }\n        })\n\n        if (!isChange) {\n            this.node.src = this.originSrc\n        }\n    }\n\n    replaceCheck(): void {\n        this.replaceTargetList.forEach((replaceTarget: ReplaceTarget) => {\n            if (replaceTarget.isMatch) {\n                this.node.setAttribute('src', replaceTarget.changeSrc)\n            }\n        })\n    }\n}\n","import { Replacer } from '../models'\n\nexport function createReplacerList(images: NodeListOf<HTMLImageElement>): Replacer[] {\n    let replacerList: Replacer[] = []\n\n    images.forEach((element: HTMLImageElement) => {\n        let replaceDataList = JSON.parse(element.dataset['replace'] as string)\n        replaceDataList = Array.isArray(replaceDataList) ? replaceDataList : [replaceDataList]\n\n        replacerList.push(\n            new Replacer({\n                originSrc: element.src,\n                node: element,\n                replaceTargetList: replaceDataList\n            })\n        )\n    })\n    return replacerList\n}\n","import { Replacer, state } from '../models'\n\n// eventReset\n\n// bind\nexport function bind(replacerList: Replacer[]): void {\n    state.breakpointList.forEach(breakpoint => {\n        window.matchMedia(breakpoint.query).addEventListener('change', event => {\n            if (event.matches) {\n                replacerList.forEach(replacer => {\n                    replacer.matchMediaCallback()\n                })\n            }\n        })\n    })\n    // init\n    state.check();\n}\n","import { Replacer } from '../models'\nimport { createReplacerList } from '../core'\nimport { bind } from './bind'\n\nexport function init() {\n    const images: NodeListOf<HTMLImageElement> = document.querySelectorAll('[data-replace]')\n    let replacerList: Replacer[] = createReplacerList(images)\n\n    bind(replacerList)\n    replacerList.forEach(replacer => {\n        replacer.replaceCheck()\n    })\n}\n"],"names":[],"mappings":"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"}