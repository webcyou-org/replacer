{"version":3,"file":"replacer.es.js","sources":["../src/utils/const.ts","../src/utils/function.ts","../src/models/state.ts","../src/models/ReplaceTarget.ts","../src/models/Replacer.ts","../src/core/createReplacerList.ts","../src/core/mediaQueryChangeEvent.ts","../src/api/addEvent.ts","../src/api/init.ts","../src/api/getType.ts","../src/api/getState.ts","../src/api/resetEvent.ts","../src/api/is.ts"],"sourcesContent":["import { Breakpoint } from '../types/index'\n\nexport const BREAKPOINT_LIST: Breakpoint[] = [\n    {\n        type: 'large',\n        deviceType: 'pc',\n        query: '(min-width: 1201px)'\n    },\n    {\n        type: 'middle',\n        deviceType: 'tab',\n        query: '(max-width: 1200px) and (min-width: 769px)'\n    },\n    {\n        type: 'small',\n        deviceType: 'sp',\n        query: '(max-width: 768px)'\n    }\n]\n","export function replaceImagePath(src: string, suffix: string): string {\n    const filename = src.match('.+/(.+?).[a-z]+([?#;].*)?$')[1]\n    const extend = src.match(/[^.]+$/)\n\n    return src.replace(filename + '.' + extend, filename + suffix + '.' + extend)\n}\n","import { BREAKPOINT_LIST } from '../utils/const'\nimport { Breakpoint } from '../types/breakpoint'\nimport { Replacer } from '../models'\n\nexport interface State extends Breakpoint {\n    breakpointList: Breakpoint[];\n    replacerList: Replacer[];\n    init: Function;\n    check: Function;\n    setReplacerList: Function;\n    setBreakpointList: Function;\n    replaceCheck: Function;\n    isMatch: Function;\n    isType: Function;\n    isDeviceType: Function;\n    isQuery: Function;\n}\n\nexport let state: State = {\n    type: 'large',\n    deviceType: 'pc',\n    query: '(min-width: 1201px)',\n    breakpointList: BREAKPOINT_LIST,\n    init: function(): void {\n        this.check();\n        this.replaceCheck();\n    },\n    check: function(): void {\n        this.breakpointList.forEach(breakpoint => {\n            if (window.matchMedia(breakpoint.query).matches) {\n                this.type = breakpoint.type\n                this.deviceType = breakpoint.deviceType\n                this.query = breakpoint.query\n            }\n        })\n    },\n    replacerList: [],\n    setReplacerList: function(replacerList: Replacer[]): void {\n        this.replacerList = replacerList;\n    },\n    setBreakpointList: function(breakpointList: Breakpoint[]) {\n        this.breakpointList = breakpointList;\n        this.type = breakpointList[0].type;\n        this.deviceType = breakpointList[0].deviceType;\n        this.query = breakpointList[0].query;\n    },\n    replaceCheck: function(): void {\n        this.replacerList.forEach(replacer => {\n            replacer.replaceCheck();\n        })\n    },\n    isMatch: function(context: string): boolean {\n        return this.type === context || this.deviceType === context || this.query === context;\n    },\n    isType: function(type: string): boolean {\n        return this.type === type;\n    },\n    isDeviceType: function(deviceType: string): boolean {\n        return this.deviceType === deviceType;\n    },\n    isQuery: function(query: string): boolean {\n        return this.query === query;\n    }\n}\n","import { state } from './state'\n\nexport class ReplaceTarget {\n    type?: string\n    deviceType?: string\n    query?: string\n    changeSrc: string\n\n    constructor(data: any) {\n        this.type = data.type ? data.type : ''\n        this.deviceType = data.deviceType ? data.deviceType : ''\n        this.query = data.query ? data.query : ''\n        this.changeSrc = data.changeSrc\n    }\n\n    get isMatch(): boolean {\n        return this.type === state.type || this.deviceType === state.deviceType || this.query === state.query\n    }\n}\n","import { replaceImagePath } from '../utils'\nimport { state } from './state'\nimport { ReplaceTarget } from './ReplaceTarget'\n\nexport class Replacer {\n    protected readonly originSrc: string\n    node: any\n    replaceTargetList: ReplaceTarget[]\n\n    constructor(data: any) {\n        this.originSrc = data.originSrc\n        this.node = data.node\n        this.replaceTargetList = data.replaceTargetList.map((replaceTarget: any) => {\n            return new ReplaceTarget({\n                type: replaceTarget.type,\n                deviceType: replaceTarget.dtype,\n                query: replaceTarget.query,\n                changeSrc: replaceImagePath(data.originSrc, replaceTarget.suffix),\n            })\n        });\n    }\n\n    matchMediaCallback(): void {\n        let isChange: boolean = false;\n        state.check();\n\n        this.replaceTargetList.forEach((replaceTarget: ReplaceTarget) => {\n            if (replaceTarget.isMatch && !isChange) {\n                this.node.setAttribute('src', replaceTarget.changeSrc)\n                isChange = true\n            }\n        })\n\n        if (!isChange) {\n            this.node.setAttribute('src', this.originSrc)\n        }\n    }\n\n    replaceCheck(): void {\n        this.replaceTargetList.forEach((replaceTarget: ReplaceTarget) => {\n            if (replaceTarget.isMatch) {\n                this.node.setAttribute('src', replaceTarget.changeSrc)\n            }\n        })\n    }\n}\n","import { Replacer } from '../models'\n\nexport function createReplacerList(images: NodeListOf<HTMLImageElement>): Replacer[] {\n    let replacerList: Replacer[] = []\n\n    images.forEach((element: HTMLImageElement) => {\n        let replaceDataList = JSON.parse(element.dataset['replace'] as string)\n        replaceDataList = Array.isArray(replaceDataList) ? replaceDataList : [replaceDataList]\n\n        replacerList.push(\n            new Replacer({\n                originSrc: element.src,\n                node: element,\n                replaceTargetList: replaceDataList\n            })\n        )\n    })\n    return replacerList\n}\n","import { state } from '../models'\n\nexport function mediaQueryChangeEvent(event: any): void {\n    if (event.matches) {\n        state.replacerList.forEach(replacer => {\n            replacer.matchMediaCallback()\n        })\n    }\n}\n","import { state } from '../models'\nimport { mediaQueryChangeEvent } from '../core'\n\nexport function addEvent(): void {\n    state.breakpointList.forEach(breakpoint => {\n        window.matchMedia(breakpoint.query).addEventListener('change', mediaQueryChangeEvent)\n    })\n}\n","import { state } from '../models'\nimport { createReplacerList } from '../core'\nimport { addEvent } from './addEvent'\n\nexport function init(option?: any): void {\n    if (option) {\n        state.setBreakpointList(Array.isArray(option) ? option : [option]);\n    }\n\n    const images: NodeListOf<HTMLImageElement> = document.querySelectorAll('[data-replace]')\n    state.setReplacerList(createReplacerList(images));\n\n    addEvent();\n    state.init();\n}\n","import { state } from '../models'\n\nexport function getType(): string {\n    return state.type\n}\n","import { state, State } from '../models'\n\nexport function getState(): State {\n    return state\n}\n","import { state } from '../models'\nimport { mediaQueryChangeEvent } from '../core'\n\nexport function resetEvent(): void {\n    state.breakpointList.forEach(breakpoint => {\n        window.matchMedia(breakpoint.query).removeEventListener('change', mediaQueryChangeEvent);\n    })\n}\n","import { state } from '../models'\n\nexport function isMatch(context: string): boolean {\n    return state.isMatch(context);\n}\n\nexport function isType(type: string): boolean {\n    return state.isType(type);\n}\n\nexport function isDeviceType(deviceType: string): boolean {\n    return state.isDeviceType(deviceType);\n}\n\nexport function isQuery(query: string): boolean {\n    return state.isQuery(query);\n}\n"],"names":[],"mappings":"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"}